<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBAQ5AgICwgQEBP8EBAT/BAQEvAUFBS8AAAAAAAAAAAAAAAAEBARsBAQE6QQE
        BP8EBAT4AwMDkwAAAA0AAAAAAAAAAAAAAAAEBAQ0AgICwwQEBP8EBAT/AgICwgQEBDkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACwsLVwkJCewKCgr/CgoK/woKCv8KCgr/CQkJ6QsLC1wAAAAFCwsLnwoK
        Cv0KCgr/CgoK/woKCv8KCgr/CwsLxwgICB8AAAAACgoKXgkJCekKCgr/CgoK/woKCv8KCgr/CQkJ7AsL
        C1cAAAAAAAAAAAAAAAAAAAAAAAAAABISEkYSEhL/EhIS/xISEv8SEhL/EhIS/xISEv8SEhL/EhIS/BER
        Ec0SEhL/EhIS/xISEv8SEhL/EhIS/xISEv8SEhL/ERERzBISEmISEhL/EhIS/xISEv8SEhL/EhIS/xIS
        Ev8SEhL/EhIS/xISEkYAAAAAAAAAAAAAAAAcHBwJGBgY0BoaGv8aGhr/Ghoa/xsbG/8bGxv/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Gxsb/xsbG/8bGxv/Ghoa/xoaGv8aGhr/GRkZ/xoaGv8aGhr/Ghoa/xsb
        G/8bGxv/Ghoa/xoaGv8aGhr/GBgY0BwcHAkAAAAAAAAAACAgIG8hISH/IiIi/yIiIv8hISHVISEhoiAg
        IKUfHx/TIiIi/yIiIv8hISH/IiIi/yIiIvwgICC8ICAgnSEhIbAiIiLtIiIi/yEhIf8hISH/IiIi/yIi
        Iv8fHx/TICAgpSEhIaIhISHVIiIi/yIiIv8hISH/ICAgbgAAAAAAAAAAJycn1SkpKf8nJyf0KSkpY1VV
        VQMAAAAAAAAAAAAAAAAoKChfJycn7ykpKf8pKSnAJiYmLgAAAAAAAAAAAAAAACgoKBkoKCiRKSkp/ykp
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP6zmHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////////A4HA/gAAgHwAAAA4AA
        AAGAAAABg4OBwY/H4/Gf/+f5n///+bA4PA3gEAgHwAAAA8AAAAOAAAABggEAQY/Hw/Gf7+f5n///+b//
        //3///////////////////////////////8=
</value>
  </data>
</root>